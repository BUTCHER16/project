To create a database 
    create database (name of the database);

To use my database as the schema
    use (name of the database);

To drop a database 
    drop database (name of the database);

To set the database to readonly
    alter database (name of the database) read only = 1;
    we cant make any modification if it is readonly mode 

To disable read-only mode
    alter database (name of the database) read only = 0;

To create a Table
    create table name_of_the_table();

To select a Table
    select * from name_of_the_table;

To rename a table
    rename table current_name to What_name_to_change;
    
To drop a table 
    drop table table_name

To Alter the table 
    alter table table_name
    add phone_number varchar(15);

    rename column current_name to What_name_to_change; # just the title of the table in that particular column heading

To modify the content
    alter table employees
    modify column email varchar(100); to change the value for the varchar

To alter the heading of the table
    alter table employees
    modify email varchar(100)
    after Last_name;

    select *from employees

AUTO COMMIT , COMMIT , ROLLBACK

    SET AUTOCOMMIT = OFF;
    COMMIT; //TO SET SET AUTOCOMMIT OFF

    DELETE FROM INFO; // BUT I DIDNT ADD WHERE CLASS SO IT WILL DELETE ALL THE DATA
    SELECT * FROM INFO;

    //TO UNDO THE STATEMENT ENTER ROLLBACK STATEMENT
    ROLLBACK;

To insert rows 
    insert into employees
    values(5,"deepak","raj",20.25,"2021-02=23");

    select * from employees;

to insert in specific column

    insert into employees (employee_id,fname,lname)
    values(5,"deepak","raj");

    select * from employees;

To SELECT*

    select *
    from employees
    where employee_id = 1;
    //it will print the following content

to insert CURRENT_DATE & CURRENT_TIME

    CREATE TABLE test(
        my_date DATE,
        MY_TIME TIME,
        MY_DAY_TIME DATETIME
    ); //IT WILL CREATE A TABLE 

    insert into test
    VALUES(CURRENT_DATE(), CURRENT TIME(), NOW());

    SELECT * FROM test;


## unique CONSTRAINT

    CREATE TABLE PRODUCT(
        PRODUCT_ID INT,
        PRODUCT_NAME VARCHAR(25) UNIQUE, // WITH THIS KEYWORD UNIQUE WE CANT INSERT ANY PRODUCT NAME THAT ARE THE SAME THEY ALL HAVE TO BE UNIQUE
        PRICE DECIMAL(4,2)
    );
    
    IF YOU FORGET TO ADD UNIQUE TO THE TABLE 

    ALTER TABLE PRODUCT
    ADD CONSTRAINT
    UNIQUE (PRODUCT_NAME -> NAME OF THE COLUMN);

    INSERT INTO PRODUCT
    VALUES  (101,"BIRIYANI"99.99),
            (102,"THAKALI SADAM",90.90);
        
    SELECT * FROM PRODUCT  // IF WE HAVE DUPLICATE THEN IT WILL POP UO SOME ERROR


## NOT NULL CONSTRAINT //NOT NULL CONSTRAINT CAN BE ADDED TO A COLUMN WHEN YOU CREATE A TABLE WHENEVER WE ENTER A NEW ROW THE VALUE WITHIN THE COLUMN CANT BE NULL

    CREATE TABLE PRODUCT(
        PRODUCT_ID INT,
        PRODUCT_NAME VARCHAR(25),
        PRICE DECIMAL(4,2) NOT NULL //WHERE YOU DONT WANT TO BE NULL
    );

    FOR ALREADY EXISTED TAB;E 

    ALTER TABLE PRODUCT
    MODIFY PRICE DECIMAL (4, 2) NOT NULL;

##CHECK SOMETHING
    ##ADD THIS TO BOTTOM OF THE TABLE WHEN YOU CREATE A TABLE
    CONSTRAINT CHK_HOURLYPAY_PAY CHECK (HOURLY_PAY >= 10.00)

    ## FOR ALREADY EXISTING TABELE
    ALTER TABLE EMPLOYEES
    ADD CONSTRAINT CHK_HOURLYPAY_PAY CHECK (HOURLY_PAY >= 10.00);

    ## TO DROP THE CHECK
    ALTER TABLE EMPLOYEES
    DROP CHECK CHK_HOURLYPAY_PAY;

## DEFAULT CONSTRAINT

    CREATE TABLE products (
        product_id INT,
        product_name VARCHAR(25),
        price DECIMAL(4, 2) DEFAULT 0
    );

    ## FOR ALTERING THE TABLE
        ALTER TABLE PRODUCTS
        ALTER PRICE SET DEFAULT 0;

    INSERT INTO PRODUCT (PRODUCT_ID,PRODUCT_NAME)
    VALUES (5,"wATER")   

    CREATE TABLE TRANSACTION(
        TRANS_ID INT,
        TRANS_PRICE DECIMAL(5,2),
        TRANS_DATETIME DATETIME DEFAULT NOW()
    );
    INSERT INTO TRANSACTION (TRANS_ID,TRANS_PRICE)
    VALUES(1,55.54),(2,66.4);

    SELECT * FROM TRANSACTION;

##PRIMARY KEY CONSTRAINTS  //IT WILL NOT ALLOW THE USER TO ENTER ANDUPLICATE ENTRIES INTO COLUMN AND THE PRIMARYB KEY CAN BE USED ONLY FOR ONE COLUMN

    CREATE TABLE TRANSACTION (
        TRANS_ID INT PRIMARY KEY,
        TRANS_PRICE DECIMAL(5,2)
    );

    SELECT * FROM TRANSACTION

    #TO ALTER A TABLE
    ALTER TABLE TRANSACTION
    ADD CONSTRAINT primary key (TRANS_ID);
    select * from TRANSACTION;

## AUTO_INCREMENT IN PRIMARY KEYS //IT WILL AUTO INCREMENT THE VALUES OF THE ASSIGNED COLUMN
    CREATE TABLE TRANSACTION (
        TRANS_ID INT PRIMARY KEY AUTO_INCREMENT,
        TRANS_PRICE DECIMAL(5,2)
    ); 

    #TO SET AN AUTO_INCREMENT STARTING POINT
        ALTER TABLE TRANSACTION
        AUTO_INCREMENT = 1000;

## FOREIGN KEY CONSTRAINTS

    CREATE TABLE CUSTOMERS(
        CUSTOMER_ID INT PRIMARY KEY auto_increment,
        FIRST_NAME varchar(50),
        LAST_NAME varchar(50)
    );
    select * FROM CUSTOMERS;

    INSERT INTO CUSTOMERS(FIRST_NAME,LAST_NAME)
    VALUES ("ALBI","DUMBLEDORE"),("ALBERT","RAVIDOSS"),("JUSTIE","ALBERT");
    SELECT * FROM CUSTOMERS;

    CREATE TABLE TRANSACTIONS(
        TRANS_ID INT PRIMARY KEY AUTO_INCREMENT,
        AMOUNT DECIMAL (5,2),
        CUSTOMER_ID INT,
        FOREIGN(CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
    );
    SELECT * FROM TRANSACTION;

    ALTER TABLE TRANSACTIONS
    AUTO_INCREMENT = 1000;

    INSERT INTO TRANSACTIONS (AMOUNT,CUSTOMER_ID)
    values (4.99,3),(2.89,2),(3.33,3),(4.99,1);

    SELECT * FROM TRANSACTIONS;

## JOINS CONSTRAINTS // COMBNE TWO OR MORE TABLE

    INSERT INTO TRANS(AMOUNT, CUSTOMER_ID)
    VALUES(1.00,NULL);
    SELECT * FROM TRANS

    INSERT INTO customers(FIRST_NAME, LAST_NAME)
    VALUES("POPPY","PUFF");
    SELECT * FROM customers;

    #INNER JOIN
    SELECT *
    FROM TRANS INNER JOIN customers
    ON TRANS.CUSTOMER_ID = customers.CUSTOMER_ID; //NOW WE CREATED AN INNER JOIN WITH TWO TABLES

    #LEFT JOIN
    SELECT *
    FROM TRANS LEFT JOIN customers
    ON TRANS.CUSTOMER_ID = customers.CUSTOMER_ID; // IT WILL DISPLAY ALL THE ELEMENT FROM THE LEFT

    #RIGHT JOIN
    SELECT *
    FROM TRANS RIGHT JOIN customers
    ON TRANS.CUSTOMER_ID = customers.CUSTOMER_ID;// IT WILL DISPLAY ALL THE ELEMENT FROM THE RIGHT

    



